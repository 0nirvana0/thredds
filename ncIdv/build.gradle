description = "Package that generates a jar file for use in the IDV"
ext.title = "ncIdv Module"

dependencies {
    compile project(":cdm")
    runtime project(":bufr")
    runtime project(":grib")
    runtime project(":netcdf4")
    runtime project(":opendap")
    runtime project(":visad")

    compile libraries["slf4j-api"]
    runtime libraries["slf4j-jdk14"]
}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    dependencies {
        exclude(dependency('c3p0:c3p0'))  // Transitive dependency dragged in by libraries["quartz"]
    }

    // Filter out crap from libraries["visad"]
    exclude 'edu/wisc/**'
    exclude 'nom/**'
    exclude 'visad/**'
}

ext {
    ncIdvJar = 'ncIdvs-' + version + '.jar'
    webstartWorkingDir = "build/signed"
    if (project.hasProperty("webdir")) {
        webstartDir = webdir + "webstart"
    }
    destinationDir = 'build/libs/'
}

/* following properties should be in gradle.properties:
   keystore=name of keystore file
   keystoreAlias=idv
   keystorePassword=password of keystore file
   webdir:parent of conan content directory
   ftpdir:ftp directory
 */
// TODO: Use the Sync task for this.
task releaseCdm(dependsOn: ['shadowJar']) << {
    if (project.hasProperty("ftpdir")) {
        // println "destinationDir= " + ${destinationDir}
        println "copy " + ncIdvJar + " to " + ftpdir
        copy { // does not give error message
            // from ${destinationDir} + ncIdvJar
            from ncIdvJar
            into ftpdir
        }
    } else {
        println "Property \"ftpdir\" must be defined to run \"releaseCdm\" task."
    }
}
