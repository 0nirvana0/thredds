apply plugin: 'shadow'

jar {
    manifest {
        attributes 'Implementation-Title': 'cdm'
    }
}

sourceSets {
    test {
       java {
           exclude 'thredds/catalog2/**/*.java'
       }
    }

    integrationTest {
      java.srcDir file('src/integration-test/java')
      resources.srcDir file('src/integration-test/resources')
  }
}

task integrationTest(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties['jar.path'] = jar.archivePath
}

dependencies {
  compile project(':udunits')
  compile project(':httpservices')
  compile group: 'org.apache.httpcomponents', name: 'httpcore', version: httpcoreVersion
  compile group: 'com.google.protobuf', name: 'protobuf-java', version: protobufVersion
  compile group: 'com.google.guava', name: 'guava', version: guavaVersion
  compile group: 'joda-time', name: 'joda-time', version: jodaTimeVersion
  compile group: 'net.jcip', name: 'jcip-annotations', version: netJcipVersion
  compile group: 'org.jdom', name: 'jdom2', version: orgJdom2Version
  compile group: 'org.itadaki', name: 'bzip2', version: orgItadakiBzip2Version
  compile group: 'org.quartz-scheduler', name: 'quartz', version: orgQuartzSchedulerVersion
  compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
  runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
  compile group: 'com.beust', name: 'jcommander', version: jcommanderVersion
}

javadoc {
  title = 'Public javadoc for netcdf-java version ' + version
  source = fileTree(dir: 'src/main/java').matching {
    include 'thredds/catalog/*.java'
    include 'ucar/ma2/*.java'
    include 'ucar/nc2/*.java'
    include 'ucar/nc2/constants/*.java'
    include 'ucar/nc2/dataset/**/*.java'
    include 'ucar/nc2/dt/*.java'
    include 'ucar/nc2/dt/grid/*.java'
    include 'ucar/nc2/ft/*.java'
    include 'ucar/nc2/ncml/*.java'
    include 'ucar/nc2/time/*.java'
    include 'ucar/nc2/units/*.java'
    include 'ucar/nc2/util/*.java'
    include 'ucar/unidata/**/*.java'
  }
}

task releaseDocs(dependsOn: javadoc) << {
  def releaseDir = webdir + "javadoc"

  ant.delete(dir: releaseDir)
  ant.mkdir(dir: releaseDir)

  copy {
    println "copyDocs to " + releaseDir
    from("build/docs/javadoc")
    into releaseDir
  }
}

/////////

shadow {
  outputFile = file("${destinationDir }/cdms-${version}.jar")
  stats = true

  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
  exclude 'META-INF/NOTICE'
  exclude 'META-INF/LICENSE'
  exclude 'META-INF/*.txt'
  exclude 'META-INF/*.xml'

  artifactSet {
      exclude 'commons-logging:commons-logging:*'
  }

  jar {
    manifest {
      attributes 'Main-Class': 'ucar.nc2.NCdumpW'
    }
  }
}
