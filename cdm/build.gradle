apply plugin: 'shadow'

jar {
    manifest {
        attributes 'Implementation-Title': 'cdm'
    }
}

sourceSets {
    test {
        java {
            exclude 'thredds/catalog2/**/*.java'
        }
    }

    integrationTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties['jar.path'] = jar.archivePath
}

dependencies {
    compile project(':udunits')
    compile project(':httpservices')

    compile libraries["httpcore"]
    compile libraries["joda-time"]
    compile libraries["jdom2"]
    compile libraries["jcip-annotations"]
    compile libraries["quartz"]
    compile libraries["protobuf-java"]
    compile libraries["guava"]
    compile libraries["bzip2"]
    compile libraries["jcommander"]

    compile libraries["slf4j-api"]
    testRuntime libraries["slf4j-jdk14"]
}

javadoc {
    title = 'Public javadoc for netcdf-java version ' + version
    source = fileTree(dir: 'src/main/java').matching {
        include 'thredds/catalog/*.java'
        include 'ucar/ma2/*.java'
        include 'ucar/nc2/*.java'
        include 'ucar/nc2/constants/*.java'
        include 'ucar/nc2/dataset/**/*.java'
        include 'ucar/nc2/dt/*.java'
        include 'ucar/nc2/dt/grid/*.java'
        include 'ucar/nc2/ft/*.java'
        include 'ucar/nc2/ncml/*.java'
        include 'ucar/nc2/time/*.java'
        include 'ucar/nc2/units/*.java'
        include 'ucar/nc2/util/*.java'
        include 'ucar/unidata/**/*.java'
    }
}

task releaseDocs(dependsOn: javadoc) << {
    def releaseDir = webdir + "javadoc"

    ant.delete(dir: releaseDir)
    ant.mkdir(dir: releaseDir)

    copy {
        println "copyDocs to " + releaseDir
        from("build/docs/javadoc")
        into releaseDir
    }
}

/////////

shadow {
    outputFile = file("${destinationDir}/cdms-${version}.jar")
    stats = true

    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/*.txt'
    exclude 'META-INF/*.xml'

    artifactSet {
        exclude 'commons-logging:commons-logging:*'
    }

    jar {
        manifest {
            attributes 'Main-Class': 'ucar.nc2.NCdumpW'
        }
    }
}
